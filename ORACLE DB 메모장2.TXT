----------- CMD 창에서 SQL 작성------------

WIN R CMD

SQLPLUS
SYS/ORACLE : ORACLE 사용자
AS
SYSDBA

CTRL + C  : 명령어에서 실행 중인 작업 중단 단축키
EXIT      : 현재 SQL에서 컴퓨터로 돌아가고싶을 때 사용하는 명령어
            세션종료가 아닌 SQL을 종료하는 것
            SQL 종료하면 세션도 종료된다. 만든 아이디는 저장됨.
이전 입력 : ↑

SQL에는 오입력방지를 위해 수정 제한이 기본값.

    수정 제한 해제하는 명령어

    ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

    ALTER   : 수정할거다.
    SESSION : 세션
    SET     : 수정하고자 하는 부분
    " "     : 수정대상. _ORACLE_SCRIPT는 현재 CMD창에 입력되는 부분
    TRUE    : ㄱㄱ. 기본값 : FALSE


새로운 사용자 생성

    CREATE USER 아이디명 IDENTIFIED BY 비밀번호

    CREATE : 생성하겠다.
    USER   : 생성목표
    아이디명
    IDNETIFIED BY 비밀번호 : 유저 아이디 생성과 동시에 비밀번호 부여
    -> 비밀번호로 아이디 구분함
    -> 아이디는 중복되면 안됨. 대소문자 구분 안함.

(ID : KHMAIN, PW : KH1234)

만든 사용자에 권한 부여

    GRANT CONNECT, RESOURCE, DBA TO 아이디

    GRANT : 권한을 부여하겠다.
      CONNECT  : DB에 접속 권한
      RESOURCE : DB생성, 사용 권한
      DBA      : DATABASE ADMIN 최고 관리자. 모든 권한 부여
                 작성하면 CONNECT, RESOURCE 따로 작성 안해도 됨
                 (포함되어 있으니까)
      TO ID    : 만든 아이디에 부여

해보기
 -> KHK라는 계정 생성, 비밀번호는 KH1234












DDL : Data Definition Language
데이터 정의 언어로 객체를 만들고 수정하고 삭제하는 구문

오라클 객체 종류
  테이블   : 데이터를 저정하는 객체
  뷰       : 하나 이상의 데이터를 논리적으로 연결하여 
             하나의 테이블처럼 사용하게 해주는 객체
  시퀀스   : 일련번호를 생성해주는 객체
  인덱스   : 테이블의 검색 효율을 높이기 위해 사용하는 객체
  패키지   : 관련 있는 프로시저와 함수를 하나로 묶어 놓은 객체
  프로시저 : 프로그래밍 연산 및 기능을 수행하고 값을 반환하지 않는 객체
  함수     : 프로그래밍 연산 및 기능을 수행하고 값을 반환하는 객체
  트리거   : 데이터 관련 작업의 연결 및 방지 관련 기능을 제공하는 객체
  동의어   : SYNOYM. 데이터베이스 객체에 대한 별칭을 부여하는 객체
  사용자   : DB사용자가 소유하고 제어하는 데이터베이스 객체


CREATE : 테이블이나 인덱스, 뷰 등 데이터베이스 객체를 생성하는 구문

작성방법
  CREATE TABLE 테이블명(컬럼명 자료형(크기), 컬럼명 자료형(크기), ...);

자료형의 종류
  CHAR(크기)             : 고정길이 문자 데이터
  VARCHAR2(크기)         : 가변길이 문자 데이터(최대4000바이트)
  NUMBER                 : 숫자 데이터(최대40자리)
  NUMBER(길이)           : 길이 지정 가능한 숫자 데이터(최대 38자리)
  DATE                   : 날짜데이터(BC4712년 1월 1일 ~ AD 4712년 12월 31일)
  LONG                   : 가변길이 문자형 데이터(최대 2기가)
  LOB(Large OBject)      : 2기가 까지의 가변길이 바이너리 데이터 저장 가능
                          -- 이미지, 실행파일 등 저장 가능
  ROWID                  : DB에 저장되지 않는 행을 식별할 수 있는 고유 값
  BFILE                  : 대용량의 바이너리 데이터 저장 가능(최대  4기가)
  TIMESTAMP              : DATE형의 확장된 형태
  INTERVAL YEAR TO MONTH : 년과 월을 이용하여 기간 저장
  INTERVAL DAY TO SECOND : 일, 시, 분, 초를 이용하여 기간 저장


CHARACTER
  1. CHAR(SIZE [ ( byte | char ) ] )
  -- size : 포함될 문자(열)의 크기
  -- 지정한 크기보다 작은 문자(열)이 입력되면 남는 공간은 공백으로 채움
  -- 데이터는 "를 사용하여 ㅂ표기하고 대,소문자를 구분함
  
  2. VARCHAR2(SIZE)
  -- SIZE : 포함될 문자(열)의 크기
  -- 크기가 O인 값은 NULL로 인식
  -- 데이터는 "를 사용하여 표기하고 대소문자 구분함

NUMBER 
  1. NUMBER(P,(S))
  -- P : 표현할 수 있는 전체 숫자 자리 수 (1 ~38)
  -- S : 소수점 이하 자리 수 (-84 ~ 127)

DATE 
  DATE
  -- 일자(세기/년/월/일) 및 시간(시/분/초) 정보 관리
  -- 기본적으로 화면에 년 월 일 정보만 표기
  -- 날짜 연산 및 비교 가능

제약조건CONSTRAINTS
 --  테이블 작성 시 각 컬럼에 기록될 데이터에 대해 제약조건을 설정할 수 있다
 -- 이는 데이터 무결성 보장을 주 목적으로 한다
 -- 입력 데이터에 문제가 없는지에 대한 검사와 
    데이터의 수정 삭제 가능 여부 검사 등을 위해 사용함

  제약조건 종류 
  NOT NULL : 데이터에 NULL을 허용하지 않음
  UNIQUE : 중복된 값을 허용하지 않음
  PRIMARY KEY : NULL과 중복 값을 허용하지 않음(컬럼의 고유 식별자로 사용)
                NOT NULL + UNIQUE. 한테이블 당 하나만 설정 가능
                컬럼 레벨, 테이블 레벨 둘 다 지정 가능

  FROEIGN KEY : 참조되는 테이블의 컬럼의 값이 존재하면 허용
   -> 참조 무결성을 위한 제약조건으로 참조된 다른 테이블이
      제공한 값만 사용하도록 제한을 거는 것
   -> 참조되는 컬럼과 참조된 컬럼을 통해 테이블 간 관계가 형성되는데
      참조되는 값은 제공되는 값 외에 NULL을 사용 가능하며
      참조할 테이블의 참조할 컬럼명을 생략한 경우
      PRIMARY KEY 로 설정된 컬럼이 자동으로 참조할 컬럼이 됨
  CHECK : 저장 가능한 데이터의 값의 범위나 조건을 지정하여 설정한 값만 허용



